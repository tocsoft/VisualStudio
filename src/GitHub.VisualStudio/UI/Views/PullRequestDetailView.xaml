<local:GenericPullRequestDetailView x:Class="GitHub.VisualStudio.UI.Views.PullRequestDetailView"
                                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                                    xmlns:cache="clr-namespace:GitHub.VisualStudio.Helpers"
                                    xmlns:local="clr-namespace:GitHub.VisualStudio.UI.Views"
                                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                                    xmlns:sampleData="clr-namespace:GitHub.SampleData;assembly=GitHub.App"
                                    xmlns:ui="clr-namespace:GitHub.UI;assembly=GitHub.UI"
                                    xmlns:uir="clr-namespace:GitHub.UI;assembly=GitHub.UI.Reactive"
                                    xmlns:vm="clr-namespace:GitHub.ViewModels;assembly=GitHub.App"
                                    xmlns:te="clr-namespace:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework;assembly=Microsoft.TeamFoundation.Controls"
                                    Background="{DynamicResource GitHubVsToolWindowBackground}"
                                    DataContext="{Binding ViewModel}"
                                    d:DesignWidth="356"
                                    d:DesignHeight="780"
                                    mc:Ignorable="d"
                                    Style="{DynamicResource BusyStateView}">
    <d:DesignProperties.DataContext>
        <Binding>
            <Binding.Source>
                <sampleData:PullRequestDetailViewModelDesigner CheckoutMode="NeedsPull" 
                                                               CommitsBehind="2"
                                                               CheckoutDisabledMessage="Cannot update branch as your working directory has uncommitted changes."/>
            </Binding.Source>
        </Binding>
    </d:DesignProperties.DataContext>

    <Control.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <cache:SharedDictionaryManager Source="pack://application:,,,/GitHub.VisualStudio.UI;component/SharedDictionary.xaml" />
                <cache:SharedDictionaryManager Source="pack://application:,,,/GitHub.UI;component/SharedDictionary.xaml" />
                <cache:SharedDictionaryManager Source="pack://application:,,,/GitHub.UI.Reactive;component/SharedDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="Separator" TargetType="Rectangle">
                <Setter Property="Fill" Value="{DynamicResource GitHubHeaderSeparatorBrush}"/>
            </Style>

            <Style x:Key="DocumentStyle" TargetType="FlowDocument">
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="TextAlignment" Value="Left"/>
                <Setter Property="PagePadding" Value="0"/>

                <Style.Resources>
                    <Style TargetType="Image">
                        <Setter Property="Stretch" Value="UniformToFill" />
                        <Setter Property="StretchDirection" Value="DownOnly" />
                        <Setter Property="MaxWidth" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ui:MarkdownViewer}}}"/>
                    </Style>
                </Style.Resources>
            </Style>

            <Style TargetType="GridViewColumnHeader">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
            </Style>

            <Style TargetType="ui:OcticonImage" BasedOn="{StaticResource OcticonImage}">
                <Setter Property="Foreground" Value="{DynamicResource GitHubVsWindowText}"/>
            </Style>
            
            <!-- TODO Fix this: here we change the color of TextBlock depending on the label.
                 It's a hack, it will break with localization -->
            <Style x:Key="StateIndicator" TargetType="TextBlock">
                <Style.Triggers>
                    <Trigger Property="Text" Value="Open">
                        <Setter Property="Foreground" Value="#6CC644"/>
                    </Trigger>
                    <Trigger Property="Text" Value="Closed">
                        <Setter Property="Foreground" Value="#BD2C00"/>
                    </Trigger>
                    <Trigger Property="Text" Value="Merged">
                        <Setter Property="Foreground" Value="#6E5494"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="CheckoutMessage" TargetType="TextBlock">
                <Setter Property="Margin" Value="0 4"/>
            </Style>

            <Style x:Key="CheckoutErrorMessage" TargetType="TextBlock">
                <Setter Property="Foreground" Value="Red" />
            </Style>

            <!-- Hyperlink has no Visibility property, sigh. Hack around this by making the text 
                 transparent and 1 px in size. -->
            <Style x:Key="HyperlinkHiddenWhenDisabled" TargetType="Hyperlink">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="Transparent"/>
                        <Setter Property="FontSize" Value="1"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Control.Resources>

    <DockPanel Grid.IsSharedSizeScope="True">
        <!-- PR Title and number -->
        <DockPanel DockPanel.Dock="Top"
                   Margin="8 4 8 8">
            <TextBlock DockPanel.Dock="Right"
                       FontSize="9pt"
                       Foreground="Gray"
                       Margin="4 2 0 0"
                       Text="{Binding Model.Number, StringFormat=#{0}}"
                       VerticalAlignment="Top"/>
            <TextBlock Text="{Binding Model.Title}"
                       FontSize="10pt"
                       VerticalAlignment="Top"
                       TextWrapping="Wrap"/>
        </DockPanel>

        <Rectangle DockPanel.Dock="Top" Style="{StaticResource Separator}" Height="2"/>

        <!-- PR Overview -->
        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="LeftMargin"/>
                <ColumnDefinition Width="6" SharedSizeGroup="LeftMarginSpace"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/> <!-- Open/closed state and branches -->
                <RowDefinition Height="1"/>
                <RowDefinition Height="Auto"/> <!-- Commit and files changed count -->
                <RowDefinition Height="1"/>
                <RowDefinition Height="Auto"/> <!-- Checkout button -->
            </Grid.RowDefinitions>
            
            <!-- PR Icon in left margin -->
            <ui:OcticonImage Grid.Column="0"
                             Margin="8"
                             VerticalAlignment="Top"
                             Icon="git_pull_request"/>

            <!-- Open/closed state and branches -->
            <StackPanel Grid.Column="2" Grid.Row="0" Orientation="Horizontal" Margin="0 6">
                <TextBlock Margin="0 0 12 0"
                           FontWeight="Bold"
                           Text="{Binding Model.State}"
                           VerticalAlignment="Center"
                           Style="{StaticResource StateIndicator}"/>

                <TextBlock Text="{Binding TargetBranchDisplayName}" VerticalAlignment="Center"/>
                <ui:OcticonImage Icon="chevron_left" Height="13" Margin="1 3 3 0"/>
                <TextBlock Text="{Binding SourceBranchDisplayName}" VerticalAlignment="Center" 
                           ToolTip="{Binding SourceBranchDisplayName}"/>
            </StackPanel>

            <Rectangle Grid.Column="2" Grid.Row="1" Margin="-2 0 0 0" Style="{StaticResource Separator}"/>

            <!-- Commit and files changed count -->
            <StackPanel Grid.Column="2" Grid.Row="2" Orientation="Horizontal" Margin="0 6">
                <ui:OcticonImage Icon="git_commit" Margin="0 1 2 0"/>
                <TextBlock Margin="2 0"
                           VerticalAlignment="Center"
                           Text="{Binding Model.CommitCount, StringFormat={}{0} commits}"/>

                <ui:OcticonImage Icon="diff" Margin="28 0 2 0"/>
                <TextBlock Margin="2 0"
                           VerticalAlignment="Center"
                           Text="{Binding Model.ChangedFiles.Count, StringFormat={}{0} files changed}"/>
            </StackPanel>

            <Rectangle Grid.Column="2" Grid.Row="3" Margin="-2 0 0 0" Style="{StaticResource Separator}"/>

            <StackPanel Grid.Column="2" Grid.Row="4" Margin="0 6">
                <!-- Checkout pull request button -->
                <Button Command="{Binding Checkout}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource GitHubVsButton}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CheckoutMode}" Value="Fetch">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    Checkout pull request
                </Button>

                <!-- Branch checked out and up-to-date -->
                <TextBlock TextWrapping="Wrap">
                    <ui:OcticonImage Icon="check" Foreground="#6CC644" Margin="0 0 0 -4"/>
                    <Run>Pull request checked out and up-to-date.</Run>
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource CheckoutMessage}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CheckoutMode}" Value="UpToDate">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <!-- Branch checked out and needs pull -->
                <TextBlock TextWrapping="Wrap">
                    <ui:OcticonImage Icon="alert" Foreground="Orange" Margin="0 0 0 -4"/>
                    <Run>Your local branch is behind by</Run>
                    <Run FontWeight="Bold" Text="{Binding CommitsBehind, StringFormat={}{0} commits.}"/>
                    <Hyperlink Command="{Binding Checkout}" Style="{StaticResource HyperlinkHiddenWhenDisabled}">Update</Hyperlink>
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource CheckoutMessage}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CheckoutMode}" Value="NeedsPull">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <!-- Local branch exists but is not checked out -->
                <TextBlock TextWrapping="Wrap">
                    <ui:OcticonImage Icon="alert" Foreground="Orange" Margin="0 0 0 -4"/>
                    <Run BaselineAlignment="Top">This branch is not currently checked out.</Run>
                    <Hyperlink Command="{Binding Checkout}" Style="{StaticResource HyperlinkHiddenWhenDisabled}">Switch branch</Hyperlink>
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource CheckoutMessage}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CheckoutMode}" Value="Switch">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <!-- Local branch is checked out but is in an invalid state -->
                <TextBlock TextWrapping="Wrap">
                    <ui:OcticonImage Icon="alert" Foreground="Orange" Margin="0 0 0 -4"/>
                    <Run BaselineAlignment="Top">The pull request branch has local changes.</Run>
                    <Hyperlink Command="{Binding Checkout}" Style="{StaticResource HyperlinkHiddenWhenDisabled}">Checkout to a new branch</Hyperlink>
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource CheckoutMessage}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CheckoutMode}" Value="InvalidState">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <!-- Local branch is checked out but needs pushing-->
                <TextBlock TextWrapping="Wrap">
                    <ui:OcticonImage Icon="info" Foreground="Orange" Margin="0 0 0 -4"/>
                    <Run BaselineAlignment="Top">Local changes can be pushed.</Run>
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource CheckoutMessage}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CheckoutMode}" Value="Push">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <!-- Checkout disabled message -->
                <TextBlock Margin="0 0 0 4" TextWrapping="Wrap">
                    <Run Text="{Binding CheckoutDisabledMessage}"/>
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource CheckoutErrorMessage}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CheckoutDisabledMessage}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <!-- Checkout error message -->
                <TextBlock Foreground="Red" Margin="0 4" Text="{Binding CheckoutError}" TextWrapping="Wrap">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <Trigger Property="Text" Value="">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
        </Grid>

        <Rectangle DockPanel.Dock="Top" Style="{StaticResource Separator}" Height="2"/>

        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LeftMargin"/>
                    <ColumnDefinition Width="6" SharedSizeGroup="LeftMarginSpace"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/> <!-- Author and open time -->
                    <RowDefinition Height="Auto"/> <!-- PR body -->
                    <RowDefinition Height="Auto"/> <!-- View on github link -->
                    <RowDefinition Height="Auto"/> <!-- Files changed -->
                </Grid.RowDefinitions>

                <!-- Author avatar -->
                <Grid Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" Margin="0 6 0 3">
                    <Grid.OpacityMask>
                        <VisualBrush Visual="{Binding ElementName=avatarMask}"/>
                    </Grid.OpacityMask>
                    <Border Name="avatarMask" Background="White" CornerRadius="3" Width="20" />
                    <Image x:Name="avatar"
                           Width="20"
                           Height="20"
                           RenderOptions.BitmapScalingMode="HighQuality"
                           Source="{Binding Model.Author.Avatar}" />
                </Grid>

                <!-- Author and open time -->
                <TextBlock Grid.Column="2" Grid.Row="0" VerticalAlignment="Center" Margin="0 6">
                    <Run FontWeight="Bold" Text="{Binding Model.Author.Login}"/>
                    <Run Text="{Binding Model.CreatedAt, StringFormat={}opened {0}, Converter={ui:DurationToStringConverter}, Mode=OneWay}"/>
                </TextBlock>

                <!-- PR Body -->
                <ui:MarkdownViewer Name="bodyMarkdown"
                                   Grid.Column="2" Grid.Row="1"
                                   Margin="2 6 10 6"
                                   DocumentStyle="{StaticResource DocumentStyle}"
                                   RawContent="{Binding Body}"
                                   ScrollViewer.VerticalScrollBarVisibility="Auto" />

                <!-- View on github link -->
                <ui:GitHubActionLink Grid.Column="2" Grid.Row="2" Margin="0 6" Command="{Binding OpenOnGitHub}">
                    View conversation on GitHub
                </ui:GitHubActionLink>

                <!-- Files changed Icon in left margin -->
                <ui:OcticonImage Grid.Column="0" Grid.Row="3"
                                 Margin="8"
                                 VerticalAlignment="Top"
                                 Icon="diff"/>

                <!-- Files changed -->
                <te:SectionControl Name="changesSection" 
                                   Grid.Column="2" Grid.Row="3"
                                   IsExpanded="True"
                                   HeaderText="{Binding ChangedFilesList.Count, StringFormat=Changes ({0})}"
                                   Margin="0 5 10 0"
                                   ContextMenuService.IsEnabled="False">
                    <te:SectionControl.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="{Binding ToggleOpenChangedFileAction}">
                                <MenuItem.Style>
                                    <Style TargetType="MenuItem">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding OpenChangedFileAction}" Value="Diff">
                                                <Setter Property="Header" Value="Open File as Default Action"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding OpenChangedFileAction}" Value="Open">
                                                <Setter Property="Header" Value="Compare File as Default Action"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </MenuItem.Style>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Command="{Binding ToggleChangedFilesView}">
                                <MenuItem.Style>
                                    <Style TargetType="MenuItem">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ChangedFilesViewType}" Value="TreeView">
                                                <Setter Property="Header" Value="Switch to List View"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ChangedFilesViewType}" Value="ListView">
                                                <Setter Property="Header" Value="Switch to Tree View"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </MenuItem.Style>
                                <MenuItem.Icon>
                                    <ui:OcticonPath Icon="list_unordered" Fill="Black" Height="16"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </te:SectionControl.ContextMenu>
                    
                    <te:SectionControl.Content>
                        <Grid>
                            <Grid.Resources>
                                <!-- When invoked from the TreeView and the ListView we programmaticly bind the 
                                     DataContext and update the CommandParameter to the changed file -->
                                <ContextMenu x:Key="FileContextMenu">
                                    <MenuItem Header="Open File" Command="{Binding OpenFile }"/>
                                    <MenuItem Header="Compare File" Command="{Binding DiffFile }"/>
                                </ContextMenu>
                            </Grid.Resources>
                            <!-- Tree View -->
                            <TreeView ItemsSource="{Binding ChangedFilesTree}"
                                      ContextMenuOpening="TreeView_ContextMenuOpening"
                                      ContextMenu="{StaticResource FileContextMenu}"
                                      Background="Transparent"
                                      BorderThickness="0"
                                      Margin="0 6 0 0"
                                      MouseRightButtonDown="FileListMouseRightButtonDown"
                                      MouseDoubleClick="FileListMouseDoubleClick">
                                <TreeView.Style>
                                    <Style TargetType="TreeView">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ChangedFilesViewType}" Value="ListView">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TreeView.Style>
                                <TreeView.ItemContainerStyle>
                                    <Style TargetType="TreeViewItem">
                                        <Setter Property="IsExpanded" Value="True"/>
                                        <Setter Property="Foreground" Value="{DynamicResource GitHubVsWindowText}"/>
                                    </Style>
                                </TreeView.ItemContainerStyle>
                                <TreeView.Resources>
                                    <HierarchicalDataTemplate DataType="{x:Type vm:PullRequestDirectoryNode}"
                                                              ItemsSource="{Binding Children}">
                                        <StackPanel Orientation="Horizontal">
                                            <ui:OcticonImage Icon="file_directory" Foreground="{DynamicResource GitHubDirectoryIconForeground}" />
                                            <TextBlock Text="{Binding DirectoryName}" Margin="4 2" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </HierarchicalDataTemplate>
                                    <DataTemplate DataType="{x:Type vm:PullRequestFileNode}">
                                        <StackPanel Orientation="Horizontal"
                                                    Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type te:SectionControl}}}">
                                            <ui:OcticonImage Icon="file_code" Foreground="{DynamicResource GitHubVsWindowText}"/>
                                            <TextBlock Text="{Binding FileName}" Margin="4 2" VerticalAlignment="Center">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ChangeType}" Value="Removed">
                                                                <Setter Property="TextDecorations" Value="Strikethrough"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <TextBlock Text="[add]" VerticalAlignment="Center" Opacity="0.5">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ChangeType}" Value="Added">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </TreeView.Resources>
                            </TreeView>

                            <!-- List View -->
                            <ListView ItemsSource="{Binding ChangedFilesList}"
                                      Background="Transparent"
                                      BorderThickness="0"
                                      Margin="0 6 0 0"                                      
                                      ContextMenuOpening="ListView_ContextMenuOpening"
                                      ContextMenu="{StaticResource FileContextMenu}"
                                      MouseDoubleClick="FileListMouseDoubleClick">
                                <ListView.Style>
                                    <Style TargetType="ListView">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ChangedFilesViewType}" Value="TreeView">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListView.Style>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="Foreground" Value="{DynamicResource GitHubVsWindowText}"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Name" Width="Auto">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <ui:OcticonImage Icon="file_code" Margin="0 0 4 0"/>
                                                        <TextBlock Text="{Binding FileName}" Margin="4 2" VerticalAlignment="Center">
                                                            <TextBlock.Style>
                                                                <Style TargetType="TextBlock">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding ChangeType}" Value="Removed">
                                                                            <Setter Property="TextDecorations" Value="Strikethrough"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                        <TextBlock Text="[add]" VerticalAlignment="Center" Opacity="0.5">
                                                            <TextBlock.Style>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding ChangeType}" Value="Added">
                                                                            <Setter Property="Visibility" Value="Visible"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Path" Width="Auto" DisplayMemberBinding="{Binding Path}"/>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </Grid>
                    </te:SectionControl.Content>
                </te:SectionControl>
            </Grid>
        </ScrollViewer>

    </DockPanel>
</local:GenericPullRequestDetailView>
